version: "3"
services:
  ###############################################
  ## PREFERENCE-SERVICE
  ###############################################
  preference-db:
    image: postgres
    container_name: preference-db
    environment:
      POSTGRES_DB: preference
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pgdata-preference:/var/lib/postgresql/data
    ports:
      - "${PREFERENCE_DB_PORT}:5432"

  preference-service:
    build: ./preference-service
    command: npm run start:dev
    container_name: preference
    environment:
      - CORE_HOST
      - CORE_PORT
      - CORE_DB_HOST
      - CORE_DB_PORT
      - NOTIFICATION_HOST
      - NOTIFICATION_PORT
      - NOTIFICATION_DB_HOST
      - NOTIFICATION_DB_PORT
      - PREFERENCE_HOST
      - PREFERENCE_PORT
      - PREFERENCE_DB_HOST
      - PREFERENCE_DB_PORT
      - ORDER_HOST
      - ORDER_PORT
      - ORDER_DB_HOST
      - ORDER_DB_PORT
    ports:
      - "${PREFERENCE_PORT}:8081"
    volumes:
      - ./preference-service:/app
      - /app/node_modules
    depends_on:
      - preference-db

  ###############################################
  ## ORDER-SERVICE
  ###############################################
  order-db:
    image: postgres
    container_name: order-db
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pgdata-order:/var/lib/postgresql/data
    ports:
      - "${ORDER_DB_PORT}:5432"

  order-service:
    build: ./order-service
    command: npm run start:dev
    container_name: order
    environment:
      - CORE_HOST
      - CORE_PORT
      - CORE_DB_HOST
      - CORE_DB_PORT
      - NOTIFICATION_HOST
      - NOTIFICATION_PORT
      - NOTIFICATION_DB_HOST
      - NOTIFICATION_DB_PORT
      - PREFERENCE_HOST
      - PREFERENCE_PORT
      - PREFERENCE_DB_HOST
      - PREFERENCE_DB_PORT
      - ORDER_HOST
      - ORDER_PORT
      - ORDER_DB_HOST
      - ORDER_DB_PORT
    ports:
      - "${ORDER_PORT}:8081"
    volumes:
      - ./order-service:/app
      - /app/node_modules
    depends_on:
      - order-db

  ###############################################
  ## NOTIFICATION-SERVICE
  ###############################################
  notification-db:
    image: postgres
    container_name: notification-db
    environment:
      POSTGRES_DB: notification
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pgdata-notification:/var/lib/postgresql/data
    ports:
      - "${NOTIFICATION_DB_PORT}:5432"

  notification-service:
    build: ./notification-service
    command: npm run start:dev
    container_name: notification
    environment:
      - CORE_HOST
      - CORE_PORT
      - CORE_DB_HOST
      - CORE_DB_PORT
      - NOTIFICATION_HOST
      - NOTIFICATION_PORT
      - NOTIFICATION_DB_HOST
      - NOTIFICATION_DB_PORT
      - PREFERENCE_HOST
      - PREFERENCE_PORT
      - PREFERENCE_DB_HOST
      - PREFERENCE_DB_PORT
      - ORDER_HOST
      - ORDER_PORT
      - ORDER_DB_HOST
      - ORDER_DB_PORT
    ports:
      - "${NOTIFICATION_PORT}:8081"
    volumes:
      - ./notification-service:/app
      - /app/node_modules
    depends_on:
      - notification-db

  ###############################################
  ## CORE-API
  ###############################################
  core-db:
    image: postgres
    container_name: core-db
    environment:
      POSTGRES_DB: core
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pgdata-core:/var/lib/postgresql/data
    ports:
      - "${CORE_DB_PORT}:5432"

  core-api:
    build: ./core-api
    command: npm run start:dev
    container_name: core
    environment:
      - CORE_HOST
      - CORE_PORT
      - CORE_DB_HOST
      - CORE_DB_PORT
      - NOTIFICATION_HOST
      - NOTIFICATION_PORT
      - NOTIFICATION_DB_HOST
      - NOTIFICATION_DB_PORT
      - PREFERENCE_HOST
      - PREFERENCE_PORT
      - PREFERENCE_DB_HOST
      - PREFERENCE_DB_PORT
      - ORDER_HOST
      - ORDER_PORT
      - ORDER_DB_HOST
      - ORDER_DB_PORT
    ports:
      - "${CORE_PORT}:8080"
    volumes:
      - ./core-api:/app
      - /app/node_modules
    depends_on:
      - core-db
      - order-service
      - preference-service
      - notification-service
